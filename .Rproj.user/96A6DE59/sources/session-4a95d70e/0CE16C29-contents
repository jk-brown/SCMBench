---
title: "Concentration Driven Hector + Matilda"
author: "Joe Brown"
date: "2025-05-05"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Goal

The goal for this file is to begin by running Hector + Matilda in concentration-driven mode. This means that we will be constraining history to CO2 concentrations and then using perturbed parameters to make future projections. 

# Set-up

## Load libraries

```{r, message=FALSE}
source("set-up/libraries.R")

```

## Load ini files

```{r}
# ini directory 
ini_dir <- paste0(system.file("input", package = "hector"), "/")

# read ini files into a list 
ini_list <- list("SSP1-1.9" = paste0(ini_dir, "hector_ssp119.ini"), 
                 "SSP1-2.6" = paste0(ini_dir, "hector_ssp126.ini"), 
                 "SSP2-4.5" = paste0(ini_dir, "hector_ssp245.ini"), 
                 "SSP3-7.0" = paste0(ini_dir, "hector_ssp370.ini"), 
                 "SSP5-8.5" = paste0(ini_dir, "hector_ssp585.ini"))

```

## Build perturbed parameter data frame

```{r}
# set sample size
n = 10000

# initiate a Hector core instance using SSP2-4.5 scenario (as reference)
param_core <- newcore(ini_list[[3]])

# set seed for replication
set.seed(444)

# generate parameter sets using Hector defaults
params <- generate_params(core = param_core, draws = n)
```

## Save this parameter set 
```{r, eval=FALSE}
# define directory path
params_dir <- here("data", "parameters")

# create directory if one does not exist
if (!dir.exists(params_dir)) {
  dir.create(params_dir, recursive = T)
}

# identify the file path
file_name <- "matilda_parameters_10k.csv"
file_path <- file.path(params_dir, file_name)

# save parameters
write.csv(params, file_path)
```

# Running the model: Constrained to C02

The goal here is to run Hector + Matilda in "concentration-driven" mode by constraining historical CO2 concentrations to observations.

## Split parameters df into chunks

```{r}

param_chunks <- param_chunks <- split(params, cut(seq_len(nrow(params)), breaks = 10, labels = FALSE))

```

## Load CO2 data for constraint

```{r}

constraint_data <- read.csv("data/observations/annual_co2_concentration.csv")

```

## Run model 

```{r}

source("set-up/utils.R")

```

Run Hector over entire PPE for each SSP scenario in the scenario list

```{r}
start_time <- Sys.time()
matilda_result <- matilda_conc_driven(param_chunks, ini_list, constraint_data)
end_time <- Sys.time()

elapsed_time <- end_time - start_time
print(elapsed_time)

```

Correct the run_numbers for each of element in the result list

```{r}

matilda_result <- fix_run_numbers(matilda_result)

```

# Save model runs 

```{r}
# define directory path
result_dir <- here("output", "model_results")

# create directory if one does not exist
if (!dir.exists(result_dir)) {
  dir.create(result_dir, recursive = T)
}

# identify the file path
file_name <- "matilda_results_concentration.RDS"
file_path <- file.path(result_dir, file_name)

# save parameters
saveRDS(matilda_result, file_path)
```

# Quick visualization

```{r}
matilda_conc_driven <- do.call(rbind, matilda_result)
rownames(matilda_conc_driven) <- NULL

```

```{r}
ggplot(data = subset(matilda_conc_driven, variable %in% c("CO2_concentration", "global_tas"))) +
  geom_line(aes(x = year, y = value, group = run_number)) +
  facet_grid(variable ~ scenario, scales = "free_y") +
  theme_light()

```

